
name: Deploy to Amazon ECR-EKS 

on:
  push:
    branches: [master]

env:
  AWS_REGION: us-east-1                    # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: go-ecs-app-repo          # set this to your Amazon ECR repository name
  ECS_SERVICE: go-service                 # set this to your Amazon ECS service name
  EKS_CLUSTER: eks-cluster 
  MONGODB_URI: ${{ secrets.MONGODB_URI }}                                             # containerDefinitions section of your task definition
  DB: ${{ secrets.DB }}   
  COLLECTION: ${{ secrets.COLLECTION }} 
  KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA_STAGING }}  

  MONGODB_URI: ${{ secrets.MONGODB_URI }}                                             # containerDefinitions section of your task definition
  DB: ${{ secrets.DB }}   
  COLLECTION: ${{ secrets.COLLECTION }}   

defaults:
  run:
    shell: bash

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: latest
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG --build-arg MONGODB_URI=${MONGODB_URI} --build-arg DB=${DB} --build-arg COLLECTION=${COLLECTION} .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"










